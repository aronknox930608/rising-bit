format_version: 1.0.0
default_step_lib_source: "https://bitbucket.org/bitrise-team/bitrise-new-steps-spec"

app:
  environments:
  - BITRISE_BIN_NAME: bitrise-cli
    opts:
      is_expand: no
  - BITRISE_DEV_BRANCH: master
    opts:
      is_expand: no

workflows:
  # ----- Main (real) Workflows -----
  test:
    steps:
    - script:
        title: Running the TEST script
        inputs:
        - content: |
            #!/bin/bash
            set -v
            bash ./_scripts/common/test.sh

  install:
    steps:
    - script@0.9.0:
        title: Running go install
        inputs:
        - content: |
            #!/bin/bash
            set -v
            set -e
            go install

  install-tools:
    steps:
    - script@0.9.0:
        title: Running go install on other tools
        inputs:
        - content: |
            #!/bin/bash
            set -v
            set -e
            bash ./_scripts/go_install_tools.sh
    - script@0.9.0:
        title: Running go install on bitrise-cli
        inputs:
        - content: |
            #!/bin/bash
            set -v
            set -e
            godep restore
            go install

  create-release:
    steps:
    - script:
        title: Creating deploy
        inputs:
        - content: |-
            #!/bin/bash
            set -v
            set -e
            if [ -f _bin/tmpbin ] ; then
              rm _bin/tmpbin
            fi
            go build -o _bin/tmpbin
            binversion="$(_bin/tmpbin -version)"
            echo "binversion: ${binversion}"
            mkdir -p _bin/${binversion}
            finalpth=_bin/${binversion}/${BITRISE_BIN_NAME}-`uname -s`-`uname -m`
            echo "finalpth: ${finalpth}"
            mv _bin/tmpbin "${finalpth}"

  # ----- Other, test workflows -----
  fail:
    # this workflow is a test for failed steps/workflows,
    #  it'll fail
    steps:
      - script:
          title: "ok"
      - script:
          title: "fail"
          inputs:
          - content: |
              #/bin/bash
              set -v
              exit 1
      - script:
          title: "ok"
          inputs:
          - content: |
              #/bin/bash
              echo "-----> This should NOT be printed!!"
          is_always_run: false
      - script:
          title: "ok"
          inputs:
          - content: |
              #/bin/bash
              echo "-----> This should be printed!!"
          is_always_run: true
