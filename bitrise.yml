format_version: 0.9.2
default_step_lib_source: "https://bitbucket.org/bitrise-team/bitrise-new-steps-spec"

app:
  envs:
  - BITRISE_BIN_NAME: bitrise-cli
    opts:
      is_expand: false
  - GITHUB_RELEASES_URL: https://github.com/bitrise-io/bitrise-cli/releases
    opts:
      is_expand: false

workflows:
  # ----- Main (real) Workflows -----
  test:
    steps:
    - script:
        title: Running the TEST script
        inputs:
        - content: |
            #!/bin/bash
            set -v
            bash ./_scripts/common/test.sh

  install:
    steps:
    - script@0.9.0:
        title: Running go install
        inputs:
        - content: |
            #!/bin/bash
            set -v
            set -e
            go install

  install-tools:
    steps:
    - script@0.9.0:
        title: Running go install on other tools
        inputs:
        - content: |
            #!/bin/bash
            set -v
            set -e
            bash ./_scripts/go_install_tools.sh
    - script@0.9.0:
        title: Running go install on bitrise-cli
        inputs:
        - content: |
            #!/bin/bash
            set -v
            set -e
            godep restore
            go install

  godep-update:
    steps:
    - script:
          title: Dependency update
          inputs:
          - content: |-
              #!/bin/bash
              set -v
              set -e
              rm -rf ./Godeps
              godep save
  create-release:
    steps:
    - script:
        title: Creating deploy
        inputs:
        - content: |-
            #!/bin/bash
            set -v
            set -e
            if [ -f _bin/tmpbin ] ; then
              rm _bin/tmpbin
            fi
            go build -o _bin/tmpbin
            binversion="$(_bin/tmpbin -version)"
            echo "binversion: ${binversion}"
            mkdir -p _bin/${binversion}
            finalpth=_bin/${binversion}/${BITRISE_BIN_NAME}-$(uname -s)-$(uname -m)
            echo "finalpth: ${finalpth}"
            mv _bin/tmpbin "${finalpth}"
            # register the version for next steps
            envman add --key RELEASE_VERSION --value "${binversion}"
  announce-release:
    steps:
    - script:
        title: Creating deploy
        inputs:
        - content: |-
            #!/bin/bash
            set -v
            set -e
            go install
            # register the version for next steps
            binversion="$(${BITRISE_BIN_NAME} -version)"
            envman add --key RELEASE_VERSION --value "${binversion}"
    - slack-message@1.2.0:
        inputs:
        - SLACK_WEBHOOK_URL: $SLACK_WEBHOOK_URL
          opts:
            is_expand: true
        - SLACK_CHANNEL: $SLACK_CHANNEL
          opts:
            is_expand: true
        - SLACK_FROM_NAME: ${BITRISE_BIN_NAME}
          opts:
            is_expand: true
        - SLACK_MESSAGE_TEXT: |
            Release v${RELEASE_VERSION} was just published! :tada:

            You can find it at ${GITHUB_RELEASES_URL}
        - SLACK_ICON_EMOJI: ":rocket:"

  # ----- Other, test workflows -----
  

  fail:
    # this workflow is a test for failed steps/workflows,
    #  it'll fail
    steps:
      - script:
          title: "ok"
      - script:
          title: "ls"
          inputs:
          - content: |
              #/bin/bash
              ls -alh
      - script:
          title: "fail"
          is_skippable: true
          inputs:
          - content: |
              #/bin/bash
              set -v
              exit 1
      - script:
          title: "fail 2"
          is_skippable: false
          inputs:
          - content: |
              #/bin/bash
              set -v
              exit 1
      - script:
          title: "ok"
          inputs:
          - content: |
              #/bin/bash
              echo "-----> This should NOT be printed!!"
          is_always_run: false
      - script:
          title: "ok"
          inputs:
          - content: |
              #/bin/bash
              echo "-----> This should be printed!!"
          is_always_run: true
