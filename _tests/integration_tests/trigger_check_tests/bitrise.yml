format_version: 1.3.0
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - TEST_CONFIG_PTH: ./_tests/integration_tests/trigger_check_tests/test-bitrise.yml
  - TEST_EMPTY_CONFIG_PTH: ./_tests/integration_tests/trigger_check_tests/test-empty-bitrise.yml
  - TEST_SECRETS_PTH: ./_tests/integration_tests/trigger_check_tests/test-secrets.yml

workflows:
  test:
    steps:
    - script:
        title: Trigger check - Output test
        inputs:
        - content: |-
            #!/bin/bash

            export PR=""
            export PULL_REQUEST_ID=""

            echo "PR mode : from secrets - is_pull_request_allowed : true"
            out=$($CURRENT_BITRISE trigger-check pr_allowed -c $TEST_CONFIG_PTH -i $TEST_SECRETS_PTH --format json)
            status=$?
            echo "status: $status"
            if [ $status -ne 0 ] ; then
              echo "out: $out"
              exit 1
            fi
            if [[ $out != '{"pattern":"pr_allowed","workflow":"pr_allowed"}' ]] ; then
              echo $out
              exit 1
            fi
            echo "----------"

            echo "Not PR mode - is_pull_request_allowed : true"
            out=$($CURRENT_BITRISE trigger-check pr_allowed -c $TEST_CONFIG_PTH --format json)
            status=$?
            echo "status: $status"
            if [ $status -ne 0 ] ; then
              echo "out: $out"
              exit 1
            fi
            if [[ $out != '{"pattern":"pr_allowed","workflow":"pr_allowed"}' ]] ; then
              echo $out
              exit 1
            fi
            echo "----------"

            echo "Not PR mode - is_pull_request_allowed : false"
            out=$($CURRENT_BITRISE trigger-check only_code_push -c $TEST_CONFIG_PTH --format json)
            status=$?
            echo "status: $status"
            if [ $status -ne 0 ] ; then
              echo "out: $out"
              exit 1
            fi
            if [[ $out != '{"pattern":"only_code_push","workflow":"only_code_push"}' ]] ; then
              echo $out
              exit 1
            fi
            echo "----------"

            echo "PR mode : from secrets - is_pull_request_allowed : false"
            out=$($CURRENT_BITRISE trigger-check only_code_push -c $TEST_CONFIG_PTH  -i $TEST_SECRETS_PTH --format json)
            status=$?
            echo "status: $status"
            if [ $status -ne 0 ] ; then
              echo "out: $out"
              exit 1
            fi
            if [[ $out != '{"pattern":"only_code_push","workflow":"fall_back"}' ]] ; then
              echo $out
              exit 1
            fi
            echo "----------"

            echo "Not PR mode - is_pull_request_allowed : false"
            out=$($CURRENT_BITRISE trigger-check fall_back -c $TEST_CONFIG_PTH --format json)
            status=$?
            echo "status: $status"
            if [ $status -ne 0 ] ; then
              echo "out: $out"
              exit 1
            fi
            if [[ $out != '{"pattern":"fall_back","workflow":"fall_back"}' ]] ; then
              echo $out
              exit 1
            fi
            echo "----------"
    - script:
        title: Trigger map validation test
        inputs:
        - content: |-
            #!/bin/bash

            export PR=""
            export PULL_REQUEST_ID=""

            echo "Empty trigger pattern"
            echo "PR mode : from secrets - is_pull_request_allowed : true"
            out=$($CURRENT_BITRISE trigger-check "" -c $TEST_CONFIG_PTH -i $TEST_EMPTY_CONFIG_PTH --format json)
            status=$?
            echo "status: $status"
            if [ $status -ne 1 ] ; then
              echo "out: $out"
              exit 1
            fi
            echo "----------"

            echo "Empty triggered workflow id"
            echo "PR mode : from secrets - is_pull_request_allowed : true"
            out=$($CURRENT_BITRISE trigger-check trigger_empty_workflow_id -c $TEST_EMPTY_CONFIG_PTH -i $TEST_SECRETS_PTH --format json)
            status=$?
            echo "status: $status"
            if [ $status -ne 1 ] ; then
              echo "out: $out"
              exit 1
            fi
            echo "----------"